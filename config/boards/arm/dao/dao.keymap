/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>



#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <140>; };
&mt { quick_tap_ms = <140>; };

/ {
 macros {
        ace_jump_pycharm: ace_jump_pycharm {
            label = "Acejump";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp SPACE>,
                <&macro_tap &kp SPACE>,
                <&macro_tap &kp S>
                ;
        };
         vim_past_from_zero: vim_past_from_zero {
            label = "vimpastzero";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LS(SQT)>,
                <&macro_tap &kp N0>,
                <&macro_tap &kp P>
                ;
        };
    };

    behaviors {
        td_gui: tap_dance_gui {
            compatible = "zmk,behavior-tap-dance";
            label = "td_gui";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&mt LS(LA(LCTRL)) RG(SPACE)>, <&kp RG(S)>;
        };
        td_f112: tap_dance_f112 {
            compatible = "zmk,behavior-tap-dance";
            label = "td_f112";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp F11>, <&kp F12>;
        };
        td_tild: tap_dance_tild {
            compatible = "zmk,behavior-tap-dance";
            label = "td_tild";
            #binding-cells = <0>;
            tapping-term-ms = <400>;
            bindings = <&mt LG(LS(LA(LCTRL))) LC(GRAVE)>, <&kp F12>;
        };
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  GUI |   ~  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  [   | GUI/] |
//        | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |CTRL/'|
//        | LALT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT |
//                           | RSE | SPC | LWR |   | LWR | BKSP | RSE |
                        bindings = <
   &none &td_gui &kp Q &kp W &kp E &kp R &kp T &kp Y         &kp U  &kp I     &kp O   &kp P    &kp LBKT &none
            &kp LC(TAB) &kp A &kp S &kp D &kp F &kp G &kp H         &kp J  &kp K     &kp L   &kp SEMI &kp SQT
            &td_tild &kp Z &kp X &kp C &kp V &kp B &kp N         &kp M  &kp COMMA &kp DOT &kp FSLH &kp BSLH
                        &mt LSHIFT DEL &kp SPACE  &lt LWR TAB  &lt ADJ ESC &lt RSE RET &mt RSHIFT BSPC
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |     |  _  |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 | F11 | F12 |
//       |  +  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  -  |
//       |  =  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans &kp LC(X) &kp PG_DN   &kp PG_UP &kp INS   &kp HOME   &kp END           &none    &kp N7   &kp N8   &kp N9   &none  &none &none
         &kp LC(V) &kp LC(KP_N1) &kp LC(KP_N2) &kp LC(KP_N3) &kp LC(KP_N4) &kp LC(KP_N5)        &none &kp N4 &kp N5 &kp N6 &none &none
         &kp LC(C) &kp LC(KP_N6)   &kp LALT &kp LCTRL   &kp LC(KP_N7)   &kp LC(KP_N8)        &none  &kp N1   &kp N2   &kp N3   &kp N0   &none
                                              &trans &trans &trans   &trans &trans &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |     | NMLK |  /  |  7  |  8  |  9  |  -  |   | VOLU| HOME| PRSC| PGUP| SCLK| CLCK|     |
//       | CTRL |  *  |  4  |  5  |  6  |  +  |   | MUT | LEFT|  UP | RGHT| INS | APP |
//       |      |  0  |  1  |  2  |  3  |  .  |   | VOLD| END | DOWN| PGDN| PAUS|     |
//                          |     |     | ADJ |   | ADJ |     |     |
                        bindings = <
   &trans &none &kp EQUAL &kp LS(EQUAL) &none &none &none    &kp LS(LA(F10)) &kp LS(LA(F9)) &none &kp MINUS &kp LS(MINUS) &kp RBKT &none
          &none &kp LS(N1) &kp LS(N2) &kp LS(N3) &kp LS(N4) &kp LS(N5)        &kp LS(N6) &kp LS(N7) &kp LS(N8) &kp LS(N9) &kp LS(N0) &none
          &none &kp F1 &kp F2 &kp F3 &kp F4 &kp F5        &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &td_f112
                                                           &trans &trans &trans   &trans &trans &trans
                        >;
                };
                adjust_layer {
// -----------------------------------------------------------------------------------------
// | RST | BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR | RST |
//       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
//       |      |     |     |     |     |     |   |     |     |     |     |     |      |
//                          |     |     |     |   |     |     |     |
                        bindings = <
   &none  &kp GRAVE &none  &kp LC(RIGHT) &none &none &kp RG(W)        &none &none &kp CAPS &none &vim_past_from_zero &none &none
          &none   &none  &none &none &none &none        &kp LEFT &kp DOWN &kp UP &kp RIGHT &none &none 
          &none   &none  &kp RG(X) &none &none &kp LC(LEFT)        &kp LA(HOME) &kp K_APP &kp RCTRL &kp RALT &none &kp LS(LC(F12))
                                                                    &trans &kp LGUI &ace_jump_pycharm   &trans &none &trans
                        >;
                };
        };
};
